#!/usr/bin/env python
# -*- coding:utf-8 -*-

import rospy

from nav_msgs.msg           import Odometry
from ublox_msgs.msg         import NavRELPOSNED

class MeasuredDataClass:
  def __init__(self):
    
    out_topic_name = rospy.get_param('~out_topic_name', 'odometry/measured')
    self.subscribe_float = rospy.get_param('~subscribe_float', False)
    self.gps_pub = rospy.Publisher(out_topic_name, Odometry, queue_size=10)
    rospy.Subscriber("ublox_gps/navrelposned", NavRELPOSNED, self.callback_gps, queue_size=10)   

    rate        = rospy.Rate(10) # 10hz
    while not rospy.is_shutdown():
      rate.sleep()

  def callback_gps(self, data):

    odom                      = Odometry()
    odom.header.stamp         = rospy.Time.now()
    odom.header.frame_id      = 'base_gps'
    odom.pose.pose.position.x = data.relPosE / 100.0
    odom.pose.pose.position.y = data.relPosN / 100.0
    # odom.pose.pose.position.z = -(data.relPosD / 100.0)
    odom.pose.pose.orientation.w = 1.0

    if (data.flags == 23) or (self.subscribe_float and data.flags == 15): # Fix or Float 
      self.gps_pub.publish(odom) 

if __name__ == '__main__':
  rospy.init_node('rtkgps_measured', anonymous=True)
  try:
    MeasuredDataClass()
    rospy.spin()
  except rospy.ROSInterruptException:
    rospy.loginfo("rtkgps_measured node finished.")
