<launch>

  <!-- frame name -->
  <arg name="global_frame" value="map"/>
  <arg name="odom_frame"   value="odom"/>
  <arg name="base_frame"   value="base_footprint"/>
  <arg name="scan_frame"   value="base_scan"/>

  <!-- initial pose -->
  <arg name="initialpose_x" value="0"/>
  <arg name="initialpose_y" value="0"/>
  <arg name="initialpose_a" value="0"/>
  <arg name="initial_state" value="[$(arg initialpose_x), $(arg initialpose_y), 0, 0, 0, $(arg initialpose_a), 0, 0, 0, 0, 0, 0, 0, 0, 0]"/>

  <!-- map file -->
  <arg name="map_file" value="$(find tms_rc_rtkbot)/maps/ito_parking/map.yaml"/>

  <!-- Turtlebot3 -->
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>

  <param name="tb3_model" value="$(arg model)"/>

  <include file="$(find turtlebot3_bringup)/launch/includes/description.launch.xml">
    <arg name="model" value="$(arg model)" />
  </include>

  <!-- Turtlebot3 Fake Node -->
  <!-- in: cmd_vel -->
  <!-- out: joint_states, odom -->
  <node pkg="turtlebot3_fake" type="turtlebot3_fake_node" name="turtlebot3_fake_node" output="screen">
    <remap from="cmd_vel" to="mux_twist"/>
    <remap from="odom" to="fake_odom"/>
  </node>

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
    <param name="publish_frequency" type="double" value="50.0" />
  </node>

  <!-- RViz -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find tms_rc_rtkbot)/rviz/turtlebot3_fake_map.rviz"/>

  <!-- map server -->
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)">
    <param name="frame_id" value="$(arg global_frame)"/>
  </node>

  <!-- static tf -->
  <node pkg="tf" type="static_transform_publisher" name="static_tf"
    args="0 0 0 0 0 0 $(arg global_frame) $(arg odom_frame) 100">
  </node>

  <!-- move base -->
  <arg name="move_base" default="true"/>
  <node pkg="move_base" type="move_base" name="move_base" respawn="false" output="screen" if="$(arg move_base)">
    <!-- <remap from="odom"                            to="fake_odom"/> -->
    <remap from="odom"                            to="/odometry/filtered"/>
    <param name="global_costmap/global_frame"     value="$(arg global_frame)"/>
    <param name="global_costmap/robot_base_frame" value="$(arg base_frame)"/>
    <param name="local_costmap/global_frame"      value="$(arg global_frame)"/>
    <param name="local_costmap/robot_base_frame"  value="$(arg base_frame)"/>
    <rosparam file="$(find tms_rc_rtkbot)/param/ninebot/move_base.yaml"/>
    <rosparam file="$(find tms_rc_rtkbot)/param/ninebot/global_planner.yaml"/>
    <rosparam file="$(find tms_rc_rtkbot)/param/ninebot/local_planner.yaml"/>
    <rosparam file="$(find tms_rc_rtkbot)/param/ninebot/costmap_separate.yaml"/>
    <rosparam file="$(find tms_rc_rtkbot)/param/ninebot/costmap_common.yaml" ns="global_costmap"/>
    <rosparam file="$(find tms_rc_rtkbot)/param/ninebot/costmap_common.yaml" ns="local_costmap"/>
  </node>

  <!-- cmd vel mux -->
  <node pkg="rostopic" type="rostopic" name="safe" args="pub safety_twist geometry_msgs/Twist '[0, 0, 0]' '[0, 0, 0]' -r 10"/>
  <node args="standalone yocs_cmd_vel_mux/CmdVelMuxNodelet" pkg="nodelet" type="nodelet" name="cmd_vel_mux">
    <param name="yaml_cfg_file"  value="$(find tms_rc_rtkbot)/param/common/cmd_vel_mux.yaml"/>
    <remap from="~input/keyop"   to="keyop"/>
    <remap from="~input/remote"  to="remote"/>
    <remap from="~input/cmd_vel" to="cmd_vel_smoother"/>
    <remap from="~input/safety"  to="safety_twist"/>
    <remap from="~output"        to="mux_twist"/>
  </node>

  <!-- portable smoother cmd -->
  <node pkg="tms_rc_rtkbot" type="portable_smoother" name="portable_smoother_cmd" output="screen">
    <param name="input_topic_name"  value="cmd_vel"/>
    <param name="output_topic_name" value="cmd_vel_smoother"/>
    <param name="acc_lim_th"        value="2.5"/>
    <param name="time_out"          value="0.5"/>
    <param name="ignore_stop"       value="false"/>
  </node>

  <!-- map_to_odom -->
  <rosparam file="$(find tms_rc_rtkbot)/param/ninebot/robot_local_separate.yaml"/>
  <node pkg="robot_localization" type="ekf_localization_node" name="map_to_odom" output="screen">
    <rosparam file="$(find tms_rc_rtkbot)/param/ninebot/robot_local_common.yaml"/>
    <rosparam param="initial_state" subst_value="True">$(arg initial_state)</rosparam>
    <remap from="set_pose"          to="initialpose"/>
    <param name="map_frame"         value="$(arg global_frame)"/>
    <param name="odom_frame"        value="$(arg odom_frame)"/>    
    <param name="base_link_frame"   value="$(arg base_frame)"/>
    <param name="world_frame"       value="$(arg global_frame)"/>
  </node>


</launch>
